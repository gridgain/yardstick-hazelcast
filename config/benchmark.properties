#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

#
#    Contains all benchmarks for (with async backups):
#    - ATOMIC operations
#    - TRANSACTIONAL operations
#    - SQL queries
#
#    Benchmarks can be run with the following command (after running `mvn clean package`):
#       bin/benchmark-run-all.sh config/benchmark.properties
#

now0=`date +'%H%M%S'`

# JVM options.
JVM_OPTS=${JVM_OPTS}" \
  -Xms6g \
  -Xmx6g \
  -Xloggc:./gc${now0}.log \
  -XX:+PrintGCDetails \
  -verbose:gc \
  -XX:+UseParNewGC \
  -XX:+UseConcMarkSweepGC \
  -XX:+PrintGCDateStamps \
"

# List of default probes.
# Add DStatProbe or VmStatProbe if your OS supports it (e.g. if running on Linux).
BENCHMARK_DEFAULT_PROBES=ThroughputLatencyProbe,PercentileProbe,DStatProbe

# Packages where the specified benchmark is searched by reflection mechanism.
BENCHMARK_PACKAGES=org.yardstickframework

# Probe point writer class name.
# BENCHMARK_WRITER=

# Benchmark label.
BENCHMARK_LABEL=hazelcast

# Comma-separated list of the hosts to run BenchmarkServers on. 2 nodes on local host are enabled by default.
SERVER_HOSTS=localhost,localhost,localhost

# Comma-separated list of the hosts to run BenchmarkDrivers on. 1 node on local host is enabled by default.
DRIVER_HOSTS=localhost

# Remote username.
# REMOTE_USER=

# Deploy binaries to remote nodes.
AUTO_COPY=true

# Restart server after each benchmark.
RESTART_SERVERS=true

# Number of nodes, used to wait for the specified number of nodes to start.
nodesNum=$((`echo ${SERVER_HOSTS} | tr ',' '\n' | wc -l`))

# Hazelcast version.
ver="hz-3.8.1-"

# Backups count.
b=1

# Warmup.
w=60

# Duration.
d=300

# Threads count.
t=64

# Sync mode

sm="--asyncBackups"

# Run configuration which contains all benchmarks.
CONFIGS="\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastSetBenchmark -sn HazelcastNode -ds ${ver}atomic-set-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastSetGetBenchmark -sn HazelcastNode -ds ${ver}atomic-set-get-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -bs 6 -dn HazelcastPutGetBatchBenchmark -sn HazelcastNode -ds ${ver}atomic-set-get-bs-6-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastSetTxBenchmark -sn HazelcastNode -ds ${ver}tx-set-pessimistic-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastSetGetTxOptimisticBenchmark -sn HazelcastNode -ds ${ver}tx-set-get-opt-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastGetTxBenchmark -sn HazelcastNode -ds ${ver}tx-get-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastSetGetTxPessimisticBenchmark -sn HazelcastNode -ds ${ver}tx-set-get-pes-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastSqlQueryBenchmark -sn HazelcastNode -ds ${ver}sql-query-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastSqlQuerySetBenchmark -sn HazelcastNode -ds ${ver}sql-query-set-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -bs 6 -dn HazelcastPutAllBenchmark -sn HazelcastNode -ds ${ver}atomic-setAll-bs-6-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -bs 6 -dn HazelcastSetAllTxBenchmark -sn HazelcastNode -ds ${ver}tx-setAll-bs-6-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -bs 6 -dn HazelcastGetAllSetAllTxOptimisticBenchmark -sn HazelcastNode -ds ${ver}tx-optimistic-getAllSetAll-bs-6-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -bs 6 -dn HazelcastGetAllSetAllTxPessimisticBenchmark -sn HazelcastNode -ds ${ver}tx-pessimistic-getAllSetAll-bs-6-${b}-backup,\
-hzcfg ${SCRIPT_DIR}/../config/hazelcast-config.xml --nodeType LITE_MEMBER -nn ${nodesNum} -b ${b} -w ${w} -d ${d} -t ${t} ${sm} --readBackups -dn HazelcastAffinityCallBenchmark -sn HazelcastNode -ds ${ver}affinity-call-${b}-backup,\
"
